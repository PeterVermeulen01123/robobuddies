{"version":3,"sources":["Card.js","CardList.js","SearchBox.js","Scroll.js","App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","users","filteredRobots","this","filter","robot","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAceA,EAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAC5B,OACC,sBAAKC,UAAU,uDAAf,UACC,qBAAKC,IAAI,SAASC,IAAG,qCAAgCH,EAAhC,mBACpB,gCACC,6BAAKF,IACJ,4BAAIC,WCcKK,EAnBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACnB,OACK,8BAEGA,EAAOC,KAAI,SAACC,EAAMC,GACnB,OACC,cAAC,EAAD,CAECR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCOAC,EAdG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aACjC,OACC,qBAAKV,UAAU,MAAf,SACC,uBACCA,UAAU,mCACVW,KAAK,SACLC,YAAY,gBACZC,SAAWH,OCAAI,EARA,SAACC,GACf,OACC,qBAAKC,MAAO,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAtE,SACEJ,EAAMK,YC8CKC,G,wDAzCd,aAAe,IAAD,8BACb,gBAcDC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAEf,YAAac,EAAME,OAAOC,SAd3C,EAAKC,MAAQ,CACZvB,OAAQ,GACRK,YAAa,IAJD,E,qDAQd,WAAqB,IAAD,OACnBmB,MAAM,8CACJC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAG,EAAKR,SAAS,CAAEpB,OAAQ4B,S,oBASxC,WAAU,IAAD,OACFC,EAAiBC,KAAKP,MAAMvB,OAAO+B,QAAO,SAAAC,GAC/C,OAAOA,EAAMvC,KAAKwC,cAAcC,SAAS,EAAKX,MAAMlB,YAAY4B,kBAGjE,OAAiC,IAA7BH,KAAKP,MAAMvB,OAAOmC,OACd,oBAAIvC,UAAU,KAAd,0BAGP,sBAAKA,UAAU,KAAf,UACC,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAcwB,KAAKZ,iBAC/B,cAAC,EAAD,UACC,cAAC,EAAD,CAAUlB,OAAS6B,a,GAnCLO,cCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OAEP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAGFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a6bed120.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ name, email, id }) => {\r\n\treturn (\r\n\t\t<div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5 \" >\r\n\t\t\t<img alt='robots' src={`https://robohash.org/tester${id}?size=175x175`} />\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t\t\t<p>{email}</p>\r\n\t\t\t\t</div>\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card.js';\r\n\r\nconst CardList = ({ robots }) => {\r\n\treturn (\r\n\t\t    <div>\r\n\t\t      {\r\n\t\t      \trobots.map((user, i)=>{\r\n\t\t\t     return (\r\n\t\t\t     \t<Card \r\n\t\t\t     \t\tkey={i} \r\n\t\t\t     \t\tid={robots[i].id} \r\n\t\t\t     \t\tname={robots[i].name} \r\n\t\t\t     \t\temail={robots[i].email} \r\n\t\t\t     \t\t/>\r\n\t\t\t     \t);\r\n\t\t\t\t})\r\n\t\t    }\r\n\t\t    </div>\r\n\t\t);\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n//import './SearchBox.css';\r\n\r\nconst SearchBox = ({ searchfield, searchChange }) => {\r\n\treturn (\r\n\t\t<div className='pa2'>\r\n\t\t\t<input \r\n\t\t\t\tclassName='pa3 ba b--green bg-lightest-blue'\r\n\t\t\t\ttype='search' \r\n\t\t\t\tplaceholder='search robots' \r\n\t\t\t\tonChange= {searchChange}\r\n\t\t\t/>\r\n\t\t\t\r\n\t\t</div>\r\n\t);\r\n\r\n}\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n\treturn (\r\n\t\t<div style={{ overflowY: 'scroll', border: '1px solid black', height: '500px' }}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t);\r\n\r\n};\r\nexport default Scroll;","import React, { Component } from 'react';\r\nimport CardList from './CardList.js';\r\nimport SearchBox from './SearchBox.js';\r\nimport Scroll from './Scroll.js'\r\nimport './App.css';\r\n\r\n\r\n\r\nclass App extends Component  {\r\n\t\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t\trobots: [],\r\n\t\t\tsearchfield: ''\t\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t\t.then(response=> response.json())\r\n\t\t\t.then(users=> this.setState({ robots: users }));\r\n\t\t\r\n\t}\r\n\r\n\tonSearchChange = (event) => {\r\n\t\t\tthis.setState({ searchfield: event.target.value })\r\n\t\t\t\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst filteredRobots = this.state.robots.filter(robot=>{\r\n\t\t\treturn robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\r\n\t\t})\r\n\r\n\t\tif (this.state.robots.length === 0) {\r\n\t\t\treturn <h1 className='tc'>Loading ... </h1>\r\n\t\t}else{\r\n\t\treturn (\r\n\t\t\t<div className='tc'>\r\n\t\t\t\t<h1 className='f1'>RoboFriends</h1>\r\n\t\t\t\t<SearchBox searchChange={this.onSearchChange} />\r\n\t\t\t<Scroll>\t\r\n\t\t\t\t<CardList robots ={filteredRobots} />\t\r\n\t\t\t</Scroll>\r\n\t\t\t</div>\r\n\t\t);\t\r\n\t\t}\r\n\t}\r\n\t\r\n}\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.js'; // <App />\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n\n  <React.StrictMode>\n    <App />\n  \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}